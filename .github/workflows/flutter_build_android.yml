name: Android Build To App Distribution

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  FLUTTER_VERSION: "3.0.0"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - name: install java 8.x
        uses: actions/setup-java@v1
        with:
          java-version: "8.x"

      - name: setup cache
        uses: actions/cache@v1
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64

      - name: flutter version
        run: flutter --version

      - name: Cache pubspec dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            build-pubspec-

      - name: flutter dependencies install
        run: flutter pub get

      - name: build apk
        run: |
          echo '${{ secrets.KEYSTORE_BASE64 }}' | base64 -d > android/release.keystore
          export KEYSTORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}'
          export KEY_ALIAS='${{ secrets.KEY_ALIAS }}'
          export KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}'
          flutter build apk --release

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: android
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # モジュールのダウンロード
      - name: Download artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: android

      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: "14.19.3"
      #     cache: npm

      # Firebase にデプロイ
      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.3
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: android/app-release.apk
